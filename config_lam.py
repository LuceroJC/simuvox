# -*- coding: utf-8 -*-
"""
Created on Fri Oct 05 13:05:12 2016

@author: Jorge C. Lucero
"""

import numpy as np

class Param(object):
    
    JAW         = 1
    TNG         = 3
    LIP         = 2
    LRX         = 1
    NG          = 29        # grid points        
    GENDER      = "Male"
    SIZE_CORR   = 1.10      # 10% size increase for male 
    POINTS      = "No"     # Show Maeda's points
    NLENGTH     = 200

    VOWELCODE = ["iy", "ey", "eh", "ah", "aa", "ao", "oh", "uw", "iw", "ew", "oe" ]              
    VOWELPAR  = np.array([[  0.5, -2.0, 1.0, -2.0,  1.0, -1.0, 0.0 ],  # iy 
    		                [  0.0, -1.0, 1.0, -2.0,  1.0, -1.0, 0.0 ],  # ey 
    		                [ -1.0,  0.0, 1.0, -2.0,  1.0, -0.5, 0.0 ],  # eh 
    		                [ -1.5,  0.5, 0.0, -0.5,  0.5, -0.5, 0.0 ],  # ah 
    		                [ -1.5,  2.0, 0.0, -0.5,  0.5, -0.5, 0.0 ],  # aa 
    		                [ -0.4,  3.0, 1.5,  0.0, -0.3,  0.0, 0.0 ],  # ao 
    		                [  -.7,  3.0, 1.5,  0.0, -0.6,  0.0, 0.0 ],  # oh 
    		                [  0.5,  2.0, 1.5, -2.0, -1.0,  1.5, 0.0 ],  # uw 
    		                [  0.5, -1.0, 1.0, -2.0, -0.5,  1.0, 0.0 ],  # iw 
    		                [  0.0, -0.2, 1.0, -1.5, -0.25, 0.5, 0.0 ],  # ew 
    		                [ -1.0, -0.5, 0.5, -2.0,  0.2, -0.5, 0.0 ]]) # oe 

    CONTROLS  = ['Jaw position', 'Tongue position', 'Tongue shape', 'Tongue tip', 
                 'Lip height', 'Lip protrusion', 'Larynx position']
    
    INITVW = 5
    PA        = VOWELPAR[INITVW,:] #np.zeros(7)  # Control vector
             
#   Semi-polar coordinate specs.
    
    IGD   = np.array([[-0.68282, -3.43275],
                      [-0.58527, -2.94236],
                      [-0.48772, -2.45196],
                      [-0.39018, -1.96157],
                      [-0.29263, -1.47118],
                      [-0.19509, -0.98078],
                      [-0.09754, -0.4904 ],
                      [-0.     , -0.     ],
                      [ 0.     ,  0.     ],
                      [ 0.     ,  0.     ],
                      [ 0.     ,  0.     ],
                      [ 0.     ,  0.     ],
                      [ 0.     ,  0.     ],
                      [ 0.     ,  0.     ],
                      [ 0.     ,  0.     ],
                      [ 0.     ,  0.     ],
                      [ 0.     ,  0.     ],
                      [ 0.     ,  0.     ],
                      [ 0.     ,  0.     ],
                      [-0.46194, -0.19134],
                      [-0.92388, -0.38268],
                      [-1.38582, -0.57402],
                      [-1.84776, -0.76536],
                      [-2.3097 , -0.95671],
                      [-2.77164, -1.14805]])

    VTOS   = np.array([[ 0.98079, -0.19509],
                       [ 0.98079, -0.19509],
                       [ 0.98079, -0.19509],
                       [ 0.98079, -0.19509],
                       [ 0.98079, -0.19509],
                       [ 0.98079, -0.19509],
                       [ 0.98079, -0.19509],
                       [ 0.98079, -0.19509],
                       [ 1.     ,  0.     ],
                       [ 0.98079,  0.19509],
                       [ 0.92388,  0.38268],
                       [ 0.83147,  0.55557],
                       [ 0.70711,  0.70711],
                       [ 0.55557,  0.83147],
                       [ 0.38268,  0.92388],
                       [ 0.19509,  0.98079],
                       [ 0.     ,  1.     ],
                       [-0.19509,  0.98079],
                       [-0.38268,  0.92388],
                       [-0.38268,  0.92388],
                       [-0.38268,  0.92388],
                       [-0.38268,  0.92388],
                       [-0.38268,  0.92388],
                       [-0.38268,  0.92388],
                       [-0.38268,  0.92388]])
                                                                    
#   Sagittal profile to area conversion coefficients
 
    ALPHA = np.array([1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 
                      1.8, 1.7, 1.7, 1.7, 1.7, 1.7, 1.7, 1.7, 1.7, 1.7, 1.8, 1.8, 
                      1.9, 2.0, 2.6])
                           
    BETA  = np.array([1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 
                      1.3, 1.4, 1.4, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 
                      1.5, 1.5, 1.5])
    
#   Lips

    INCI_LIP = 0.8
    U_LIP    = np.array([ 0.555,  0.65,   0.72,   2.44 ])
    INCI     = np.array([-4.175,  0.795]) 
    A_LIP    = np.array([[ 0.145,    0.,       0.     ],
                         [ 0.03119, -0.06925,  0.15556],
                         [-0.08118,  0.51868,  0.     ],
                         [-0.24667,  0.93658, -0.34439]])

#   Tongue 
    
    U_TNG = np.array([ 2.274,  2.439,  2.139,  1.858,  1.838,  1.928,  1.939,  
                       1.9,    1.841,  1.778,  1.728,  1.707,  1.731 , 1.81 ,  1.93,   
                       2.069,  2.208,  2.325,  2.398,  2.414,  2.377,  2.298,  2.187,
                       2.055,  1.913])
    
    A_TNG = np.array([[-0.05835,  0.00793, -0.02769,  0.0325 ],
                      [-0.0914 ,  0.09478, -0.08711,  0.14304],
                      [-0.11736,  0.2446 , -0.14929,  0.33044],
                      [-0.14307,  0.3579 , -0.18374,  0.21314],
                      [-0.14593,  0.36144, -0.16889,  0.10426],
                      [-0.13722,  0.3477 , -0.11866,  0.06965],
                      [-0.13114,  0.35596, -0.05588,  0.05906],
                      [-0.1221 ,  0.35712,  0.00081,  0.05136],
                      [-0.10819,  0.34701,  0.04945,  0.04428],
                      [-0.08976,  0.33127,  0.09221,  0.03858],
                      [-0.06719,  0.31292,  0.1313 ,  0.03503],
                      [-0.04085,  0.28452,  0.16891,  0.03442],
                      [-0.01111,  0.23603,  0.20724,  0.03753],
                      [ 0.02153,  0.16012,  0.24646,  0.04486],
                      [ 0.05608,  0.06047,  0.27868,  0.05592],
                      [ 0.09138, -0.05654,  0.294  ,  0.06994],
                      [ 0.12632, -0.18192,  0.28486,  0.08617],
                      [ 0.15976, -0.29631,  0.25314,  0.10384],
                      [ 0.19057, -0.37781,  0.20307,  0.12219],
                      [ 0.21761, -0.41044,  0.13883,  0.14086],
                      [ 0.23974, -0.4021 ,  0.06445,  0.16107],
                      [ 0.25585, -0.36664, -0.01606,  0.18443],
                      [ 0.26479, -0.31794, -0.09871,  0.21257],
                      [ 0.26543, -0.26985, -0.17952,  0.2471 ],
                      [ 0.25663, -0.23624, -0.25448,  0.28964]])

#   Larynx
    
    U_LRX = np.array([ 0.555,   0.76,   -5.0255,  2.145,  -5.105 ])
    A_LRX = np.array([[ 0.145,    0.     ],
                      [-0.04583,  0.05774],
                      [ 0.0441 ,  0.34217],
                      [-0.03098,  0.07068],
                      [ 0.03419,  0.32699]])
                        
#   Wall 
    
    U_WAL = np.array([ 2.899,  3.285,  3.49,   3.561,  3.544,  3.488,  3.439,  
                       3.434,  3.458,  3.487,  3.498,  3.466,  3.365,  3.192,  
                       3.026,  2.967,  3.077,  3.269,  3.42,   3.433,  3.33 ,  
                       3.163,  2.983,  2.84,   2.785])